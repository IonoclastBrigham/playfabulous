plugins {
    id 'kotlin'
}

group 'com.ionoclast.playfabulous'
version "0.1.${new Date().getTime()}"

sourceSets {
    main.kotlin.srcDirs += 'src/main'
    test.kotlin.srcDirs += 'src/test'
}

// Java Compat/Interop
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs += ["-XXLanguage:+InlineClasses"]
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs += ["-XXLanguage:+InlineClasses"]
}

// Deps
repositories {
    mavenCentral()
}
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.0"

    compile "com.squareup.okhttp3:logging-interceptor:3.10.0"
    compile "com.squareup.retrofit2:retrofit:2.4.0"
    compile 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    compile "com.squareup.retrofit2:converter-gson:2.4.0"
    compile "com.google.code.gson:gson:2.8.2"

    testCompile "junit:junit:4.12"
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-common"
    testCompile "org.jetbrains.kotlin:kotlin-test-annotations-common"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
}

// Tasks

jar {
    manifest {
        attributes (
                "Implementation-Title": "PlayFabulous",
                "Implementation-Version": version,
                "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
        )
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

test {
    dependsOn cleanTest
    //testLogging.showStandardStreams = true
}
